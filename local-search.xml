<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>你读书，就是为了杀人吗？！</title>
    <link href="/daily/2023/06/14/"/>
    <url>/daily/2023/06/14/</url>
    
    <content type="html"><![CDATA[<p>3D大屏的事基本弄的差不多了，然后今天就接着整数字城市了，添加了中心点动态墙、四面体模型、及底部旋转圆动画</p><p>本来还想看看WebGL的，但是中途有个紧急上线，给耽搁了 😫</p><p>然后今天整理了下Blender的快捷键，算是复习了一遍基础操作吧</p><p>然后早上总算是把180°的自行车主杠给弄好了，还是使用细分跟平滑，明天终于能整车轮了🤸‍♂️</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快捷键 - Blender</title>
    <link href="/blender/Keymap/"/>
    <url>/blender/Keymap/</url>
    
    <content type="html"><![CDATA[<h3 id="全局快捷键"><a href="#全局快捷键" class="headerlink" title="全局快捷键"></a>全局快捷键</h3><table><thead><tr><th align="center">快捷键</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Ctrl-O</td><td align="center">打开文件</td></tr><tr><td align="center">Ctrl-S</td><td align="center">保存文件</td></tr><tr><td align="center">Shift-Ctrl-S</td><td align="center">另存为</td></tr><tr><td align="center">Ctrl-N</td><td align="center">新建</td></tr><tr><td align="center">Ctrl-Z</td><td align="center">撤销</td></tr><tr><td align="center">Shift-Ctrl-Z</td><td align="center">重做</td></tr><tr><td align="center">Ctrl-Q</td><td align="center">退出</td></tr><tr><td align="center">F1</td><td align="center">帮助</td></tr><tr><td align="center">F2</td><td align="center">重命名</td></tr><tr><td align="center">F3</td><td align="center">操作搜索</td></tr><tr><td align="center">F4(🤕)</td><td align="center">文件上下文(应该是指文件菜单的上下文吧？？？咋想不起还有这操作)</td></tr><tr><td align="center">Q</td><td align="center">快速收藏夹</td></tr><tr><td align="center">Ctrl-Spacebar</td><td align="center">窗口最大化切换</td></tr><tr><td align="center">Ctrl-Alt-Spacebar</td><td align="center">窗口全屏</td></tr><tr><td align="center">Spacebar</td><td align="center">被我改成调出工具栏了</td></tr><tr><td align="center">Shift-Spacebar</td><td align="center">播放动画</td></tr><tr><td align="center">Shift-Ctrl-Spacebar</td><td align="center">反向播放动画(这操作还没体验过)</td></tr></tbody></table><h3 id="通用编辑器快捷键"><a href="#通用编辑器快捷键" class="headerlink" title="通用编辑器快捷键"></a>通用编辑器快捷键</h3><table><thead><tr><th align="center">快捷键</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">全选</td></tr><tr><td align="center">Alt-A</td><td align="center">清空已选</td></tr><tr><td align="center">Ctrl-I</td><td align="center">反选</td></tr><tr><td align="center">H</td><td align="center">隐藏所选</td></tr><tr><td align="center">Alt-H</td><td align="center">显示隐藏项</td></tr><tr><td align="center">T</td><td align="center">切换工具栏</td></tr><tr><td align="center">N</td><td align="center">切换侧边栏</td></tr></tbody></table><h3 id="3D-视图快捷键"><a href="#3D-视图快捷键" class="headerlink" title="3D 视图快捷键"></a>3D 视图快捷键</h3><table><thead><tr><th align="center">快捷键</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Tab</td><td align="center">编辑模式切换</td></tr><tr><td align="center">Ctrl-Tab</td><td align="center">模式切换饼图菜单</td></tr><tr><td align="center">1-3</td><td align="center">编辑模式点、线、面切换</td></tr><tr><td align="center">&#96;</td><td align="center">视图导航饼图菜单</td></tr><tr><td align="center">Ctrl-&#96;(😩)</td><td align="center">切换 gizmos ？？？？</td></tr><tr><td align="center">Shift-&#96;(😩)</td><td align="center">步行&#x2F;飞行模式 ？？？</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Blender</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blender</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>杀人犯，你好</title>
    <link href="/daily/2023/06/13/"/>
    <url>/daily/2023/06/13/</url>
    
    <content type="html"><![CDATA[<p>今天接着把2D&#x2F;3D交互那坨代码优化了下， 对接了下实时数据，还发现一个问题：</p><p>在云桌面测试时，发现模拟点击事件找不到对应设备，因为云桌面比较卡，然后模型加载较慢，所以导致在透传鼠标事件获取目标设备时，设备还没渲染到可视区域。于是加了30S的递归循环，在没读到设备前，每一秒都去重新尝试一下，直到找到设备为止，这样基本就能找到设备了。</p><p>然后早上试了下使用倒角实现180°的转弯，结果还是不太理想，总觉得差些啥，今天上班路上仔细打量了下路边的自行车，唉，了然，对于立方体的上下两个边没有过渡，果然还得用细分加平滑去做，明天再做一遍看看效果吧 🤹‍♂️</p><p>哦，上班时还偷偷耍了会Emacs，几天没练，组合键都忘光了要，干啥都要至少3个键位，干啥都离不开ctrl键，算了，吃灰去吧，不想练了</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我是马修，我无话可说</title>
    <link href="/daily/2023/06/12/"/>
    <url>/daily/2023/06/12/</url>
    
    <content type="html"><![CDATA[<p>今天接着处理了模拟点击事件会导致多个子设备穿透的事，然后对了下接口，不过还没弄完。</p><p>然后很开心的一件事是Github和Gitee同步的事终于处理好了，终于不用手动同步了。配置脚本大概是这个样子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span> <span class="hljs-comment"># default branch</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build-and-deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">permissions:</span><br>      <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-comment"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br>          <span class="hljs-attr">submodules:</span> <span class="hljs-string">recursive</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-number">16.</span><span class="hljs-string">x</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;16&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">NPM</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.OS</span> <span class="hljs-string">&#125;&#125;-npm-cache</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">build</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">github_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">./public</span><br><br>  <span class="hljs-attr">sync-to-gitee:</span><br>    <span class="hljs-attr">needs:</span> <span class="hljs-string">build-and-deploy</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">permissions:</span><br>      <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Organization</span> <span class="hljs-string">mirror</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">Yikun/hub-mirror-action@mappings</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">src:</span> <span class="hljs-string">github/Mkamvi</span><br>          <span class="hljs-attr">dst:</span> <span class="hljs-string">gitee/iWuzhi</span><br>          <span class="hljs-attr">dst_key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SYNC_GITEE_PRIVATE_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">dst_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITEE_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">mappings:</span> <span class="hljs-string">&quot;mkamvi.github.io=&gt;iWuzhi&quot;</span><br>          <span class="hljs-attr">static_list:</span> <span class="hljs-string">&quot;mkamvi.github.io&quot;</span><br>          <span class="hljs-attr">force_update:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-attr">reload-gitee-pages:</span><br>    <span class="hljs-attr">needs:</span> <span class="hljs-string">sync-to-gitee</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Gitee</span> <span class="hljs-string">Pages</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">yanglbme/gitee-pages-action@main</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-comment"># 注意替换为你的 Gitee 用户名</span><br>          <span class="hljs-attr">gitee-username:</span> <span class="hljs-string">iWuzhi</span><br>          <span class="hljs-comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span><br>          <span class="hljs-attr">gitee-password:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITEE_PASSWORD</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-comment"># 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span><br>          <span class="hljs-attr">gitee-repo:</span> <span class="hljs-string">iWuzhi</span><br>          <span class="hljs-comment"># 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span><br>          <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br></code></pre></td></tr></table></figure><p>大概流程是，Github遇到push事件后，开始构建流程，构建完再触发部署流程，这波完了Github就已经部署好了。然后往Gitee同步代码，接着再触发Gitee Pages重新部署，然后Gitee也就部署好了，耶~</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时间变慢了，那就慢慢来吧</title>
    <link href="/daily/2023/06/11/"/>
    <url>/daily/2023/06/11/</url>
    
    <content type="html"><![CDATA[<p>今天突然发现竟然对自行车的结构好陌生啊，找了几张参考图，零件好多啊…….，中间还看到了几个摩托车案例，好帅啊，自行车弄完就弄摩托车吧  🏍️，单车变摩托  🤣</p><p>本以为2小时就能弄完，没想到竟然卡在了180°的拐弯上，算是把平滑、细分修改器、曲线、曲线修改器、曲线倒角都练习了一遍 🤣</p><p>这周抽时间接着弄吧  😮‍💨</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>星河挂在天上</title>
    <link href="/daily/2023/06/10/"/>
    <url>/daily/2023/06/10/</url>
    
    <content type="html"><![CDATA[<p>哈哈哈哈哈哈哈<span style='margin-right: 14px;'></span>每次看她都笑的好开心</p><p>今天认证了下七牛云，结果是只分配了一个临时域名(能用 30 天)，好气哦，算了，那就先这么用着吧，备案流程实在是太麻烦了 😩</p><p>然后今天基本啥也没干，看看天、发发呆、听听歌、擦擦桌、补补觉，就这样慢悠悠的度过一天也挺好 🫠</p><p>然后明天就做个自行车吧 _____🚲__🚲_🚲___🚲_🚲🚲_🚲_________</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>乱七八糟</title>
    <link href="/daily/2023/06/09/"/>
    <url>/daily/2023/06/09/</url>
    
    <content type="html"><![CDATA[<p>今天主要跟后端对接了下位号位置关联的事，然后发现一个问题：同一个位置下在模拟点击事件的时候，可能对应多个子设备穿透的问题，但目前只取了第一个，后台可能因为没有位号并未入库，所以会查不出设备信息，这个就有点烦。只能去调整SDK去做适配，通过检索匹配有效设备后再触发点击效果事件，不过还没弄完，麻烦 😩</p><p>然后Github Action上下文部分补充了：</p><ol><li>vars</li><li>job</li></ol><p>然后早上起不来了… 😩</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上下文 - Github Actions</title>
    <link href="/github/gh-actions/context/"/>
    <url>/github/gh-actions/context/</url>
    
    <content type="html"><![CDATA[<h3 id="关于上下文"><a href="#关于上下文" class="headerlink" title="关于上下文"></a>关于上下文</h3><p>上下文是一种访问工作流运行、变量、运行器环境、作业及步骤相关信息的方式。 每个上下文都是一个包含属性的对象，属性可以是字符串或其他对象。</p><h5 id="使用表达式访问上下文"><a href="#使用表达式访问上下文" class="headerlink" title="使用表达式访问上下文"></a>使用表达式访问上下文</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">&lt;context&gt;</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><h5 id="访问上下文的两种方式"><a href="#访问上下文的两种方式" class="headerlink" title="访问上下文的两种方式"></a>访问上下文的两种方式</h5><ol><li>github[‘sha’]</li><li>github.sha</li></ol><h5 id="上下文类型"><a href="#上下文类型" class="headerlink" title="上下文类型"></a>上下文类型</h5><ol><li>默认环境变量：仅存在于执行作业的运行器上</li><li>上下文：你可以在工作流的任何时间点使用大多数上下文</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">CI</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">prod-check:</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.ref</span> <span class="hljs-string">==</span> <span class="hljs-string">&#x27;refs/heads/main&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Deploying to production server on branch $GITHUB_REF&quot;</span><br></code></pre></td></tr></table></figure><h5 id="可用的上下文"><a href="#可用的上下文" class="headerlink" title="可用的上下文"></a>可用的上下文</h5><ol><li><p>github:</p><p>上下文包含有关工作流运行和触发运行的事件的信息。 还可以读取环境变量中的大多数 github 上下文数据</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  action<span class="hljs-punctuation">:</span> 正在运行的操作的名称，或步骤的id<br>  action_path<span class="hljs-punctuation">:</span> 操作所在的路径<span class="hljs-punctuation">,</span><br>  action_ref<span class="hljs-punctuation">:</span> 对于执行操作的步骤，这是正在执行的操作的引用<span class="hljs-punctuation">,</span><br>  action_repository<span class="hljs-punctuation">:</span> 对于执行操作的步骤，这是操作的所有者和存储库名称<br>  action_status<span class="hljs-punctuation">:</span> 对于复合操作，这是复合操作的当前结果<br>  actor<span class="hljs-punctuation">:</span> 触发初始工作流运行的用户的用户名<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Run</span> <span class="hljs-string">CI</span><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>, <span class="hljs-string">pull_request</span>]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">normal_ci:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Run</span> <span class="hljs-string">normal</span> <span class="hljs-string">CI</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./run-tests</span><br><br>  <span class="hljs-attr">pull_request_ci:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.event_name</span> <span class="hljs-string">==</span> <span class="hljs-string">&#x27;pull_request&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Run</span> <span class="hljs-string">PR</span> <span class="hljs-string">CI</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./run-additional-pr-ci</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>env</p><p>env 上下文包含已在工作流、作业或步骤中设置的变量</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  &lt;env_name&gt;<span class="hljs-punctuation">:</span> 特定环境变量的值<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Hi</span> <span class="hljs-string">Mascot</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">mascot:</span> <span class="hljs-string">Mona</span><br>  <span class="hljs-attr">super_duper_var:</span> <span class="hljs-string">totally_awesome</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">windows_job:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">windows-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&#x27;Hi $<span class="hljs-template-variable">&#123;&#123; env.mascot &#125;&#125;</span>&#x27;</span>  <span class="hljs-comment"># Hi Mona</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&#x27;Hi $<span class="hljs-template-variable">&#123;&#123; env.mascot &#125;&#125;</span>&#x27;</span>  <span class="hljs-comment"># Hi Octocat</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">mascot:</span> <span class="hljs-string">Octocat</span><br>  <span class="hljs-attr">linux_job:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">env:</span><br>      <span class="hljs-attr">mascot:</span> <span class="hljs-string">Tux</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&#x27;Hi $<span class="hljs-template-variable">&#123;&#123; env.mascot &#125;&#125;</span>&#x27;</span>  <span class="hljs-comment"># Hi Tux</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>vars</p><p>vars 上下文的内容是配置变量名称与其值的映射。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br><span class="hljs-attr">env:</span><br>  <span class="hljs-comment"># Setting an environment variable with the value of a configuration variable</span><br>  <span class="hljs-attr">env_var:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.ENV_CONTEXT_VAR</span> <span class="hljs-string">&#125;&#125;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">display-variables:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.JOB_NAME</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-comment"># You can use configuration variables with the `vars` context for dynamic jobs</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.USE_VARIABLES</span> <span class="hljs-string">==</span> <span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.RUNNER</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">environment:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.ENVIRONMENT_STAGE</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">variables</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        echo &quot;repository variable : $REPOSITORY_VAR&quot;</span><br><span class="hljs-string">        echo &quot;organization variable : $ORGANIZATION_VAR&quot;</span><br><span class="hljs-string">        echo &quot;overridden variable : $OVERRIDE_VAR&quot;</span><br><span class="hljs-string">        echo &quot;variable from shell environment : $env_var&quot;</span><br><span class="hljs-string"></span>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">REPOSITORY_VAR:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.REPOSITORY_VAR</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">ORGANIZATION_VAR:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.ORGANIZATION_VAR</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">OVERRIDE_VAR:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.OVERRIDE_VAR</span> <span class="hljs-string">&#125;&#125;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.HELLO_WORLD_STEP</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.HELLO_WORLD_ENABLED</span> <span class="hljs-string">==</span> <span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/hello-world-javascript-action@main</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">who-to-greet:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">vars.GREET_NAME</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><ol start="4"><li><p>job</p><p>job 上下文包含当前正在运行的作业相关信息</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// 作业的容器相关信息</span><br>  container<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    id<span class="hljs-punctuation">:</span> 容器的 ID<span class="hljs-punctuation">,</span><br>    network<span class="hljs-punctuation">:</span> 容器网络的 ID<span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">// 为作业创建的服务容器</span><br>  services<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    id<span class="hljs-punctuation">:</span> 服务容器的 ID<span class="hljs-punctuation">,</span><br>    network<span class="hljs-punctuation">:</span> 服务容器网络的 ID<span class="hljs-punctuation">,</span><br>    ports<span class="hljs-punctuation">:</span> 服务容器显露的端口<span class="hljs-punctuation">,</span><br>    status<span class="hljs-punctuation">:</span> 作业的当前状态 success | failure | cancelled<br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ol start="5"><li><p>jobs</p><p>此示例可重用工作流使用 jobs 上下文设置可重用工作流的输出。 请注意输出如何从步骤流向作业，然后流向 workflow_call 触发器</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Reusable</span> <span class="hljs-string">workflow</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_call:</span><br>    <span class="hljs-comment"># Map the workflow outputs to job outputs</span><br>    <span class="hljs-attr">outputs:</span><br>      <span class="hljs-attr">firstword:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;The first output string&quot;</span><br>        <span class="hljs-attr">value:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">jobs.example_job.outputs.output1</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">secondword:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;The second output string&quot;</span><br>        <span class="hljs-attr">value:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">jobs.example_job.outputs.output2</span> <span class="hljs-string">&#125;&#125;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">example_job:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">output</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-comment"># Map the job outputs to step outputs</span><br>    <span class="hljs-attr">outputs:</span><br>      <span class="hljs-attr">output1:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.step1.outputs.firstword</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">output2:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.step2.outputs.secondword</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">step1</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;firstword=hello&quot;</span> <span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">$GITHUB_OUTPUT</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">step2</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;secondword=world&quot;</span> <span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">$GITHUB_OUTPUT</span><br></code></pre></td></tr></table></figure><ol start="6"><li><p>steps</p><p>steps 上下文包含有关当前作业中已指定 id 且已运行的步骤的信息。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">random</span> <span class="hljs-string">failure</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">randomly-failing-job:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">checkout</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-number">0</span> <span class="hljs-string">or</span> <span class="hljs-number">1</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">generate_number</span><br>        <span class="hljs-attr">run:</span>  <span class="hljs-string">echo</span> <span class="hljs-string">&quot;random_number=$(($RANDOM % 2))&quot;</span> <span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">$GITHUB_OUTPUT</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pass</span> <span class="hljs-string">or</span> <span class="hljs-string">fail</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br>          <span class="hljs-string">if</span> [[ <span class="hljs-string">$<span class="hljs-template-variable">&#123;&#123; steps.generate_number.outputs.random_number &#125;&#125;</span></span> <span class="hljs-string">==</span> <span class="hljs-number">0</span> ]]<span class="hljs-string">;</span> <span class="hljs-string">then</span> <span class="hljs-string">exit</span> <span class="hljs-number">0</span><span class="hljs-string">;</span> <span class="hljs-string">else</span> <span class="hljs-string">exit</span> <span class="hljs-number">1</span><span class="hljs-string">;</span> <span class="hljs-string">fi</span><br></code></pre></td></tr></table></figure><ol start="7"><li><p>runner</p><p>runner 上下文包含正在执行当前作业的运行器相关信息。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">with</span> <span class="hljs-string">logs</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir $&#123;&#123; runner.temp &#125;&#125;/build_logs</span><br><span class="hljs-string">          ./build.sh --log-path $&#123;&#123; runner.temp &#125;&#125;/build_logs</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">logs</span> <span class="hljs-string">on</span> <span class="hljs-string">fail</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">failure()</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">failure</span> <span class="hljs-string">logs</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.temp</span> <span class="hljs-string">&#125;&#125;/build_logs</span><br></code></pre></td></tr></table></figure><ol start="8"><li><p>secrets</p><p>secrets 上下文的以下示例内容显示自动 GITHUB_TOKEN，以及可用于工作流运行的两个其他机密。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">request</span> <span class="hljs-string">labeler</span><br><span class="hljs-attr">on:</span> [ <span class="hljs-string">pull_request_target</span> ]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">triage:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">permissions:</span><br>      <span class="hljs-attr">contents:</span> <span class="hljs-string">read</span><br>      <span class="hljs-attr">pull-requests:</span> <span class="hljs-string">write</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/labeler@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">repo-token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><ol start="9"><li><p>strategy</p><p>对于具有矩阵的工作流，strategy 上下文包含有关当前作业的矩阵执行策略的信息。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Test</span> <span class="hljs-string">matrix</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">test:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">test-group:</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br>        <span class="hljs-attr">node:</span> [<span class="hljs-number">14</span>, <span class="hljs-number">16</span>]<br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">test</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">test-job-$&#123;&#123;</span> <span class="hljs-string">strategy.job-index</span> <span class="hljs-string">&#125;&#125;.txt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">logs</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">log</span> <span class="hljs-string">for</span> <span class="hljs-string">job</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">strategy.job-index</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">test-job-$&#123;&#123;</span> <span class="hljs-string">strategy.job-index</span> <span class="hljs-string">&#125;&#125;.txt</span><br></code></pre></td></tr></table></figure><ol start="10"><li><p>matrix</p><p>对于具有矩阵的工作流，matrix 上下文包含工作流程文件中定义的适用于当前作业的矩阵属性。 例如，如果使用 os 和 node 键配置矩阵，则 matrix 上下文对象包含 os 和 node 属性，该属性具有用于当前作业的值</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Test</span> <span class="hljs-string">matrix</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.os</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">os:</span> [<span class="hljs-string">ubuntu-latest</span>, <span class="hljs-string">windows-latest</span>]<br>        <span class="hljs-attr">node:</span> [<span class="hljs-number">14</span>, <span class="hljs-number">16</span>]<br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">ci</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Run</span> <span class="hljs-string">tests</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">test</span><br></code></pre></td></tr></table></figure><ol start="11"><li><p>needs</p><p>needs 上下文包含定义为当前作业直接依赖项的所有作业的输出。 请注意，这不包括隐式依赖作业（例如依赖作业的依赖作业）</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">and</span> <span class="hljs-string">deploy</span><br><span class="hljs-attr">on:</span> <span class="hljs-string">push</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">outputs:</span><br>      <span class="hljs-attr">build_id:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.build_step.outputs.build_id</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">build_step</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          ./build</span><br><span class="hljs-string">          echo &quot;build_id=$BUILD_ID&quot; &gt;&gt; $GITHUB_OUTPUT</span><br><span class="hljs-string"></span>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">needs:</span> <span class="hljs-string">build</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">./deploy</span> <span class="hljs-string">--build</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">needs.build.outputs.build_id</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">debug:</span><br>    <span class="hljs-attr">needs:</span> [<span class="hljs-string">build</span>, <span class="hljs-string">deploy</span>]<br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">failure()</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">./debug</span><br></code></pre></td></tr></table></figure><ol start="12"><li><p>inputs</p><p>inputs 上下文包含传递给操作可重用工作流或手动触发的工作流的输入属性。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Reusable</span> <span class="hljs-string">deploy</span> <span class="hljs-string">workflow</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_call:</span><br>    <span class="hljs-attr">inputs:</span><br>      <span class="hljs-attr">build_id:</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">number</span><br>      <span class="hljs-attr">deploy_target:</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>      <span class="hljs-attr">perform_deploy:</span><br>        <span class="hljs-attr">required:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">inputs.perform_deploy</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">build</span> <span class="hljs-string">to</span> <span class="hljs-string">target</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">deploy</span> <span class="hljs-string">--build</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">inputs.build_id</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">--target</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">inputs.deploy_target</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>gh-actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>兜兜转转，又回到了原点</title>
    <link href="/daily/2023/06/08/"/>
    <url>/daily/2023/06/08/</url>
    
    <content type="html"><![CDATA[<p>今天继续看了Github Action的Context主题，主要还是如何在脚本执行过程中使用系统变量，以更加灵活的编写脚本，不过系统变量有点多，还没看完，脑壳疼</p><p>然后本来计划看看WebGL，然后接着做数字城市，但2D和3D的交互实现方案不满意，只能去优化方案：</p><ol><li>通过解析模型(GLTF)查找位置信息，然后根据节点ID入库(需要去熟悉GLTF，极其麻烦)</li><li>在客户端遍历模型入口文件，通过借助Cesium的能力，由客户端发起位置入库命令(需要前后端配合，比较麻烦)</li><li>通过解析scenetree.json(切片工具产生的模型结构树)文件，直接入库(采用)</li></ol><p>然后Blender今天多少也算是看了一点：😂</p><ol><li>遮罩可以快速制作有机物动画(变形、动作…)</li><li>雕刻时如何合并两个对象<ul><li>ctrl + j: 合并对象</li><li>R + remesh: 重新计算网格体</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>柳神真真真真真的太帅了</title>
    <link href="/daily/2023/06/07/"/>
    <url>/daily/2023/06/07/</url>
    
    <content type="html"><![CDATA[<p>咋这么困，🤔</p><p>今天把Github的基础部分基本都看完了，包括：</p><ol><li>如何使用变量</li><li>如何添加脚本</li><li>作业之间如何共享数据</li><li>如何撰写表达式（表达式里有个过滤器，看着不常用，但很有意思）</li></ol><p>然后是3D大屏部分是把3D模型与2D图纸交互部分的绑定逻辑添加了快捷绑定方案，因为这部分工作需要其他人来做。主要包括：</p><ol><li>从模型数据拼接交换代码</li><li>添加输入框来展示交换代码</li><li>添加复制按钮来快速实现代码复制操作</li><li>然后简单画了绑定过程示意图</li></ol><p>然后今天又又又又又起晚了……………本帅的Blender大计啊………………….😫……………………….</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基本功能 - Gihub Actions</title>
    <link href="/github/gh-actions/basic-feture/"/>
    <url>/github/gh-actions/basic-feture/</url>
    
    <content type="html"><![CDATA[<h3 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">example-job:</span><br>      <span class="hljs-attr">steps:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Connect</span> <span class="hljs-string">to</span> <span class="hljs-string">PostgreSQL</span><br>          <span class="hljs-attr">run:</span> <span class="hljs-string">node</span> <span class="hljs-string">client.js</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-attr">POSTGRES_HOST:</span> <span class="hljs-string">postgres</span><br>            <span class="hljs-attr">POSTGRES_PORT:</span> <span class="hljs-number">5432</span><br></code></pre></td></tr></table></figure><h3 id="添加脚本到工作流程"><a href="#添加脚本到工作流程" class="headerlink" title="添加脚本到工作流程"></a>添加脚本到工作流程</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">example-job:</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Run</span> <span class="hljs-string">build</span> <span class="hljs-string">script</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">./.github/scripts/build.sh</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><h3 id="在作业之间共享数据"><a href="#在作业之间共享数据" class="headerlink" title="在作业之间共享数据"></a>在作业之间共享数据</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">example-job:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Save</span> <span class="hljs-string">output</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">shell:</span> <span class="hljs-string">bash</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          expr 1 + 1 &gt; output.log</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">output</span> <span class="hljs-string">file</span>  <span class="hljs-comment"># 上传</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">output-log-file</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">output.log</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Download</span> <span class="hljs-string">a</span> <span class="hljs-string">single</span> <span class="hljs-string">artifact</span>  <span class="hljs-comment"># 下载</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/download-artifact@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">output-log-file</span><br></code></pre></td></tr></table></figure><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># $&#123;&#123; expression &#125;&#125;</span><br><span class="hljs-attr">steps:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/hello-world-javascript-action@e76147da8e5c81eaf017dede5645551d4b94427b</span><br>      <span class="hljs-attr">if:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">&lt;expression&gt;</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">MY_ENV_VAR:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">&lt;expression&gt;</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">myNull:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-literal">null</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myBoolean:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-literal">false</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myIntegerNumber:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-number">711</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myFloatNumber:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-number">-9.2</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myHexNumber:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-number">0xff</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myExponentialNumber:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-number">-2.99e-2</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">myString:</span> <span class="hljs-string">Mona</span> <span class="hljs-string">the</span> <span class="hljs-string">Octocat</span><br>  <span class="hljs-attr">myStringInBraces:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">&#x27;It&#x27;</span><span class="hljs-string">&#x27;s open source!&#x27;</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><h5 id="运算符-JS-通用"><a href="#运算符-JS-通用" class="headerlink" title="运算符(JS 通用)"></a>运算符(JS 通用)</h5><h5 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h5><ul><li><p>contains( search, item )</p></li><li><p>startsWith( searchString, searchValue )</p></li><li><p>endsWith( searchString, searchValue )</p></li><li><p>format( string, replaceValue0, replaceValue1, …, replaceValueN)</p></li><li><p>join( array, optionalSeparator )</p></li><li><p>toJSON(value)</p></li><li><p>fromJSON(value)</p></li><li><p>hashFiles(path)</p></li><li><p>success()  如果前面的步骤都没有失败或被取消，则返回 true。</p></li><li><p>always()</p></li><li><p>cancelled()</p></li><li><p>failure()</p></li><li> *  对象过滤器</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs YAML">[<br>  &#123; <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;apple&quot;</span>, <span class="hljs-attr">&quot;quantity&quot;:</span> <span class="hljs-number">1</span> &#125;,<br>  &#123; <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;orange&quot;</span>, <span class="hljs-attr">&quot;quantity&quot;:</span> <span class="hljs-number">2</span> &#125;,<br>  &#123; <span class="hljs-attr">&quot;name&quot;:</span> <span class="hljs-string">&quot;pear&quot;</span>, <span class="hljs-attr">&quot;quantity&quot;:</span> <span class="hljs-number">1</span> &#125;<br>]<br></code></pre></td></tr></table></figure><p>筛选器 fruits.*.name 返回数组 [ “apple”, “orange”, “pear” ]。</p>]]></content>
    
    
    <categories>
      
      <category>github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>gh-actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于 - Github Actions</title>
    <link href="/github/gh-actions/abstract/"/>
    <url>/github/gh-actions/abstract/</url>
    
    <content type="html"><![CDATA[<h3 id="Github-Actions-的组件"><a href="#Github-Actions-的组件" class="headerlink" title="Github Actions 的组件"></a>Github Actions 的组件</h3><h5 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h5><p>工作流程由签入到存储库的 YAML 文件定义，并在存储库中的事件触发时运行，也可以手动触发，或按定义的时间表触发。工作流程在存储库的 .github&#x2F;workflows 目录中定义，存储库可以有多个工作流程，每个工作流程都可以执行不同的任务集。</p><h5 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h5><p>事件是存储库中触发工作流程运行的特定活动。 例如，当有人创建拉取请求、打开议题或将提交推送到存储库时。</p><h5 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h5><p>作业是工作流中在同一运行器上执行的一组步骤。 每个步骤要么是一个将要执行的 shell 脚本，要么是一个将要运行的动作。 步骤按顺序执行，并且相互依赖。 由于每个步骤都在同一运行器上执行，因此您可以将数据从一个步骤共享到另一个步骤。 例如，可以有一个生成应用程序的步骤，后跟一个测试已生成应用程序的步骤。</p><h5 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h5><p>操作是用于 GitHub Actions 平台的自定义应用程序，它执行复杂但经常重复的任务。 使用操作可帮助减少在工作流程文件中编写的重复代码量。</p><h5 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h5><p>运行程序是触发工作流时运行工作流的服务器。 每个运行器一次可以运行一个作业。 GitHub 提供 Ubuntu Linux、Microsoft Windows 和 macOS 运行器来运行您的工作流程；每个工作流程运行都在新预配的全新虚拟机中执行。</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># .github/workflows/*.yml</span><br><br><span class="hljs-attr">name:</span> <span class="hljs-string">learn-github-actions</span>  <span class="hljs-comment"># 工作流名称</span><br><span class="hljs-attr">run-name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.actor</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">is</span> <span class="hljs-string">learning</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Actions</span>  <span class="hljs-comment"># 工作流运行名称</span><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]  <span class="hljs-comment"># 触发器，使用push事件</span><br><span class="hljs-attr">jobs:</span>  <span class="hljs-comment"># 工作流下的所有作业</span><br>  <span class="hljs-attr">check-bats-version:</span>  <span class="hljs-comment"># 定义一个作业名称</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span>  <span class="hljs-comment"># 运行程序</span><br>    <span class="hljs-attr">steps:</span>  <span class="hljs-comment"># 作业下的所有步骤</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;14&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">bats</span>  <span class="hljs-comment"># 操作(执行命令)</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">bats</span> <span class="hljs-string">-v</span><br></code></pre></td></tr></table></figure><h3 id="查找和自定义操作"><a href="#查找和自定义操作" class="headerlink" title="查找和自定义操作"></a>查找和自定义操作</h3><h5 id="使用-GitHub-Marketplace"><a href="#使用-GitHub-Marketplace" class="headerlink" title="使用 GitHub Marketplace"></a>使用 GitHub Marketplace</h5><h5 id="从相同仓库添加操作"><a href="#从相同仓库添加操作" class="headerlink" title="从相同仓库添加操作"></a>从相同仓库添加操作</h5><p>使用相对路径</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">-- hello-world (repository)</span><br><span class="hljs-string"></span>|<span class="hljs-string">   </span>|<span class="hljs-string">__ .github</span><br><span class="hljs-string"></span>|<span class="hljs-string">       └── workflows</span><br><span class="hljs-string"></span>|<span class="hljs-string">           └── my-first-workflow.yml</span><br><span class="hljs-string"></span>|<span class="hljs-string">       └── actions</span><br><span class="hljs-string"></span>|<span class="hljs-string">           </span>|<span class="hljs-string">__ hello-world-action</span><br><span class="hljs-string"></span>|<span class="hljs-string">               └── action.yml</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-comment"># This step checks out a copy of your repository.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-comment"># This step references the directory that contains the action.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">./.github/actions/hello-world-action</span><br></code></pre></td></tr></table></figure><p>action.yml 文件用于提供操作的元数据。</p><h5 id="从不同仓库添加操作"><a href="#从不同仓库添加操作" class="headerlink" title="从不同仓库添加操作"></a>从不同仓库添加操作</h5><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">jobs</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">my_first_job</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">steps</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">name: My first step</span><br>        <span class="hljs-attribute">uses</span><span class="hljs-punctuation">:</span> <span class="hljs-string">actions/setup-node@v3</span><br></code></pre></td></tr></table></figure><h5 id="对自定义操作使用发行版管理"><a href="#对自定义操作使用发行版管理" class="headerlink" title="对自定义操作使用发行版管理"></a>对自定义操作使用发行版管理</h5><ol><li>使用标签</li><li>使用 SHA</li><li>使用分支</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">steps:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/javascript-action@mai</span><br></code></pre></td></tr></table></figure><h5 id="对操作使用输入和输出"><a href="#对操作使用输入和输出" class="headerlink" title="对操作使用输入和输出"></a>对操作使用输入和输出</h5>]]></content>
    
    
    <categories>
      
      <category>github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>gh-actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>雨终于停了</title>
    <link href="/daily/2023/06/06/"/>
    <url>/daily/2023/06/06/</url>
    
    <content type="html"><![CDATA[<p>处理了下家里电脑NeoVim启动报错问题，通过scoop装了gcc，然后发现lualine插件中文会乱码，便先把后半段给截掉了，后面再看看吧。</p><p>然后就是Blender了，今天主要看了：</p><ol><li>Mask： 主要用途是在雕塑的时候可以保护细节不被影响，还有就是控制显示和隐藏</li><li>Face Sets: 网格体分组(使用不同的颜色标记)</li></ol><p>缓存了下数字城市的白模数据，然后通过自定义着色器程序添加了环形动画。</p><p>确认了大屏3D渲染新方案，确认了数据格式的准确性。</p><p>优先开始看Github Action了，要不后面都得手动同步，好麻烦。</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>脑子进水了</title>
    <link href="/daily/2023/06/05/"/>
    <url>/daily/2023/06/05/</url>
    
    <content type="html"><![CDATA[<p>一首歌循环了整整一天，我也是个大傻子。</p><p>早上主要看了下数字城市案例细节呈现及实现方式，然后下午帮同事又跑了一次zip文件内容替换的脚本。</p><p>然后今天计划开始把WebGL再系统的学习一次了，大概是把学习路线给整好了，后面就慢慢整理起来就行了。</p><p>然后想不到的是Gitee的认证通过了，原本以为至少要一天以上的时间，就顺便从Github把这个博客同步过来了，Gitee虽然国内访问快，但自定义域名需要收费，这个就很烦，我的域名又没有备案，备案又需要服务器，然后我又不想买，所以就陷入死循环了。所以今天买了七牛云，想试下能否直接使用域名解析，不行的话就当个存储服务吧。</p><p>然后就是往Gitee同步代码的事，本来想通过Github Action触发自动同步， 但发现在Github通过Action自动构建后更新的分支代码无法触发Push流程，这就很烦，算了，这两天再研究下Github Action，然后自己写个流水线脚本好了。</p><p>然后这会发现Hexo页面预览竟然会跟着换行符而换行，然后搜了一下配置了mark，但这样会导致页面有个空格，无语……………….. 又是一个问题……..</p><p>然后这两天比较赖床，早上起的很晚，Blender都没时间练习了…洗洗睡明天早起吧……</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今天是起飞的一天</title>
    <link href="/daily/2023/06/02/"/>
    <url>/daily/2023/06/02/</url>
    
    <content type="html"><![CDATA[<p>今天仔细分析了下实时航线的实现方式，了解了下如何计算球面的两点间距离(参考 Great-circle distance 和 Haversine formula)，然后优化了下飞机落地方向。</p><p>接着研究了两点之间动画插值方式</p><ol><li>通过两点计算中间位置坐标</li><li>设置中间位置高度(类抛物线)</li><li>通过 Cesium.CatmullRomSplineI 获取任意时间点位置(evaluate)</li><li>通过自定义插值数量与 CatmullRomSplineI 时间点映射即可获得每个时间点对应的坐标位置</li></ol><p>然后把飞行动画从Track(历史轨迹)替换成了DynamicLayer(动态图层)+DynamicModel(动态模型)方式，因为历史轨迹无法实时调整飞机位置，动态模型可以做到。</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC文档概览</title>
    <link href="/gis/dc/%E6%A6%82%E8%A7%88/"/>
    <url>/gis/dc/%E6%A6%82%E8%A7%88/</url>
    
    <content type="html"><![CDATA[<h3 id="基础构成"><a href="#基础构成" class="headerlink" title="基础构成"></a>基础构成</h3><h5 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h5><ol><li>DC<blockquote><p>全局</p></blockquote></li><li>Cesium<blockquote><p>const { Cesium } &#x3D; DC.Namespace</p></blockquote></li><li>turf<blockquote><p>const { turf } &#x3D; DC.Namespace</p></blockquote></li></ol><h5 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h5><h5 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h5><h5 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h5><h3 id="全局API"><a href="#全局API" class="headerlink" title="全局API"></a>全局API</h3><h5 id="Viewer"><a href="#Viewer" class="headerlink" title="Viewer"></a>Viewer</h5><h5 id="Popup"><a href="#Popup" class="headerlink" title="Popup"></a>Popup</h5><h5 id="ContextMenu"><a href="#ContextMenu" class="headerlink" title="ContextMenu"></a>ContextMenu</h5><h5 id="Tooltip"><a href="#Tooltip" class="headerlink" title="Tooltip"></a>Tooltip</h5><h5 id="MapSplit"><a href="#MapSplit" class="headerlink" title="MapSplit"></a>MapSplit</h5><h5 id="TilesetSplit"><a href="#TilesetSplit" class="headerlink" title="TilesetSplit"></a>TilesetSplit</h5><h5 id="SceneSplit"><a href="#SceneSplit" class="headerlink" title="SceneSplit"></a>SceneSplit</h5><h5 id="Compass"><a href="#Compass" class="headerlink" title="Compass"></a>Compass</h5><h5 id="ZoomController"><a href="#ZoomController" class="headerlink" title="ZoomController"></a>ZoomController</h5><h5 id="LocationBar"><a href="#LocationBar" class="headerlink" title="LocationBar"></a>LocationBar</h5><h5 id="DistanceLegend"><a href="#DistanceLegend" class="headerlink" title="DistanceLegend"></a>DistanceLegend</h5><h5 id="LoadingMask"><a href="#LoadingMask" class="headerlink" title="LoadingMask"></a>LoadingMask</h5><h5 id="SkyBox"><a href="#SkyBox" class="headerlink" title="SkyBox"></a>SkyBox</h5><h5 id="GroundSkyBox"><a href="#GroundSkyBox" class="headerlink" title="GroundSkyBox"></a>GroundSkyBox</h5><h5 id="Position"><a href="#Position" class="headerlink" title="Position"></a>Position</h5><h5 id="Color"><a href="#Color" class="headerlink" title="Color"></a>Color</h5><h5 id="TilesetStyle"><a href="#TilesetStyle" class="headerlink" title="TilesetStyle"></a>TilesetStyle</h5><h5 id="JulianDate"><a href="#JulianDate" class="headerlink" title="JulianDate"></a>JulianDate</h5><h5 id="Rect"><a href="#Rect" class="headerlink" title="Rect"></a>Rect</h5><h5 id="CallbackProperty"><a href="#CallbackProperty" class="headerlink" title="CallbackProperty"></a>CallbackProperty</h5><h5 id="Parse"><a href="#Parse" class="headerlink" title="Parse"></a>Parse</h5><h5 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h5><h5 id="CoordTransform"><a href="#CoordTransform" class="headerlink" title="CoordTransform"></a>CoordTransform</h5><h5 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h5><h5 id="Util"><a href="#Util" class="headerlink" title="Util"></a>Util</h5><h5 id="DomUtil"><a href="#DomUtil" class="headerlink" title="DomUtil"></a>DomUtil</h5><h3 id="地图地形"><a href="#地图地形" class="headerlink" title="地图地形"></a>地图地形</h3><h5 id="ImageryLayerFactory"><a href="#ImageryLayerFactory" class="headerlink" title="ImageryLayerFactory"></a>ImageryLayerFactory</h5><h5 id="TerrainFactory"><a href="#TerrainFactory" class="headerlink" title="TerrainFactory"></a>TerrainFactory</h5><h3 id="业务图层"><a href="#业务图层" class="headerlink" title="业务图层"></a>业务图层</h3><h5 id="Layer"><a href="#Layer" class="headerlink" title="Layer"></a>Layer</h5><h5 id="LayerGroup"><a href="#LayerGroup" class="headerlink" title="LayerGroup"></a>LayerGroup</h5><h5 id="VectorLayer"><a href="#VectorLayer" class="headerlink" title="VectorLayer"></a>VectorLayer</h5><h5 id="DynamicLayer"><a href="#DynamicLayer" class="headerlink" title="DynamicLayer"></a>DynamicLayer</h5><h5 id="PrimitiveLayer"><a href="#PrimitiveLayer" class="headerlink" title="PrimitiveLayer"></a>PrimitiveLayer</h5><h5 id="GroundPrimitiveLayer"><a href="#GroundPrimitiveLayer" class="headerlink" title="GroundPrimitiveLayer"></a>GroundPrimitiveLayer</h5><h5 id="TilesetLayer"><a href="#TilesetLayer" class="headerlink" title="TilesetLayer"></a>TilesetLayer</h5><h5 id="GeoJsonLayer"><a href="#GeoJsonLayer" class="headerlink" title="GeoJsonLayer"></a>GeoJsonLayer</h5><h5 id="TopoJsonLayer"><a href="#TopoJsonLayer" class="headerlink" title="TopoJsonLayer"></a>TopoJsonLayer</h5><h5 id="HtmlLayer"><a href="#HtmlLayer" class="headerlink" title="HtmlLayer"></a>HtmlLayer</h5><h5 id="CzmlLayer"><a href="#CzmlLayer" class="headerlink" title="CzmlLayer"></a>CzmlLayer</h5><h5 id="KmlLayer"><a href="#KmlLayer" class="headerlink" title="KmlLayer"></a>KmlLayer</h5><h5 id="GpxLayer"><a href="#GpxLayer" class="headerlink" title="GpxLayer"></a>GpxLayer</h5><h5 id="ClusterLayer"><a href="#ClusterLayer" class="headerlink" title="ClusterLayer"></a>ClusterLayer</h5><h5 id="HeatLayer"><a href="#HeatLayer" class="headerlink" title="HeatLayer"></a>HeatLayer</h5><h5 id="WindLayer"><a href="#WindLayer" class="headerlink" title="WindLayer"></a>WindLayer</h5><h5 id="S3MLayer"><a href="#S3MLayer" class="headerlink" title="S3MLayer"></a>S3MLayer</h5><h3 id="覆盖元素"><a href="#覆盖元素" class="headerlink" title="覆盖元素"></a>覆盖元素</h3><h5 id="Overlay"><a href="#Overlay" class="headerlink" title="Overlay"></a>Overlay</h5><h5 id="Point"><a href="#Point" class="headerlink" title="Point"></a>Point</h5><h5 id="Polyline"><a href="#Polyline" class="headerlink" title="Polyline"></a>Polyline</h5><h5 id="Polygon"><a href="#Polygon" class="headerlink" title="Polygon"></a>Polygon</h5><h5 id="Billboard"><a href="#Billboard" class="headerlink" title="Billboard"></a>Billboard</h5><h5 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h5><h5 id="Circle"><a href="#Circle" class="headerlink" title="Circle"></a>Circle</h5><h5 id="Rectangle"><a href="#Rectangle" class="headerlink" title="Rectangle"></a>Rectangle</h5><h5 id="Wall"><a href="#Wall" class="headerlink" title="Wall"></a>Wall</h5><h5 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h5><h5 id="Tileset"><a href="#Tileset" class="headerlink" title="Tileset"></a>Tileset</h5><h5 id="DivIcon"><a href="#DivIcon" class="headerlink" title="DivIcon"></a>DivIcon</h5><h5 id="Box"><a href="#Box" class="headerlink" title="Box"></a>Box</h5><h5 id="Corridor"><a href="#Corridor" class="headerlink" title="Corridor"></a>Corridor</h5><h5 id="Cylinder"><a href="#Cylinder" class="headerlink" title="Cylinder"></a>Cylinder</h5><h5 id="Ellipse"><a href="#Ellipse" class="headerlink" title="Ellipse"></a>Ellipse</h5><h5 id="Ellipsoid"><a href="#Ellipsoid" class="headerlink" title="Ellipsoid"></a>Ellipsoid</h5><h5 id="Plane"><a href="#Plane" class="headerlink" title="Plane"></a>Plane</h5><h5 id="PolylineVolume"><a href="#PolylineVolume" class="headerlink" title="PolylineVolume"></a>PolylineVolume</h5><h5 id="DynamicBillboard"><a href="#DynamicBillboard" class="headerlink" title="DynamicBillboard"></a>DynamicBillboard</h5><h5 id="DynamicModel"><a href="#DynamicModel" class="headerlink" title="DynamicModel"></a>DynamicModel</h5><h5 id="CustomBillboard"><a href="#CustomBillboard" class="headerlink" title="CustomBillboard"></a>CustomBillboard</h5><h5 id="CustomLabel"><a href="#CustomLabel" class="headerlink" title="CustomLabel"></a>CustomLabel</h5><h5 id="AttackArrow"><a href="#AttackArrow" class="headerlink" title="AttackArrow"></a>AttackArrow</h5><h5 id="DoubleArrow"><a href="#DoubleArrow" class="headerlink" title="DoubleArrow"></a>DoubleArrow</h5><h5 id="FineArrow"><a href="#FineArrow" class="headerlink" title="FineArrow"></a>FineArrow</h5><h5 id="GatheringPlace"><a href="#GatheringPlace" class="headerlink" title="GatheringPlace"></a>GatheringPlace</h5><h5 id="TailedAttackArrow"><a href="#TailedAttackArrow" class="headerlink" title="TailedAttackArrow"></a>TailedAttackArrow</h5><h5 id="BillboardPrimitive"><a href="#BillboardPrimitive" class="headerlink" title="BillboardPrimitive"></a>BillboardPrimitive</h5><h5 id="BounceBillboardPrimitive"><a href="#BounceBillboardPrimitive" class="headerlink" title="BounceBillboardPrimitive"></a>BounceBillboardPrimitive</h5><h5 id="DiffuseWallPrimitive"><a href="#DiffuseWallPrimitive" class="headerlink" title="DiffuseWallPrimitive"></a>DiffuseWallPrimitive</h5><h5 id="ElecEllipsoidPrimitive"><a href="#ElecEllipsoidPrimitive" class="headerlink" title="ElecEllipsoidPrimitive"></a>ElecEllipsoidPrimitive</h5><h5 id="FlowLinePrimitive"><a href="#FlowLinePrimitive" class="headerlink" title="FlowLinePrimitive"></a>FlowLinePrimitive</h5><h5 id="LabelPrimitive"><a href="#LabelPrimitive" class="headerlink" title="LabelPrimitive"></a>LabelPrimitive</h5><h5 id="LightCylinderPrimitive"><a href="#LightCylinderPrimitive" class="headerlink" title="LightCylinderPrimitive"></a>LightCylinderPrimitive</h5><h5 id="BounceLabelPrimitive"><a href="#BounceLabelPrimitive" class="headerlink" title="BounceLabelPrimitive"></a>BounceLabelPrimitive</h5><h5 id="ModelPrimitive"><a href="#ModelPrimitive" class="headerlink" title="ModelPrimitive"></a>ModelPrimitive</h5><h5 id="ModelCollectionPrimitive"><a href="#ModelCollectionPrimitive" class="headerlink" title="ModelCollectionPrimitive"></a>ModelCollectionPrimitive</h5><h5 id="PointPrimitive"><a href="#PointPrimitive" class="headerlink" title="PointPrimitive"></a>PointPrimitive</h5><h5 id="PolylinePrimitive"><a href="#PolylinePrimitive" class="headerlink" title="PolylinePrimitive"></a>PolylinePrimitive</h5><h5 id="ScanCirclePrimitive"><a href="#ScanCirclePrimitive" class="headerlink" title="ScanCirclePrimitive"></a>ScanCirclePrimitive</h5><h5 id="TrailLinePrimitive"><a href="#TrailLinePrimitive" class="headerlink" title="TrailLinePrimitive"></a>TrailLinePrimitive</h5><h5 id="WaterPrimitive"><a href="#WaterPrimitive" class="headerlink" title="WaterPrimitive"></a>WaterPrimitive</h5><h5 id="VideoPrimitive"><a href="#VideoPrimitive" class="headerlink" title="VideoPrimitive"></a>VideoPrimitive</h5><h3 id="材质属性"><a href="#材质属性" class="headerlink" title="材质属性"></a>材质属性</h3><h3 id="效果动画"><a href="#效果动画" class="headerlink" title="效果动画"></a>效果动画</h3><h3 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h3><h3 id="场景分析"><a href="#场景分析" class="headerlink" title="场景分析"></a>场景分析</h3><h3 id="第三方集成"><a href="#第三方集成" class="headerlink" title="第三方集成"></a>第三方集成</h3>]]></content>
    
    
    <categories>
      
      <category>Gis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Gis</tag>
      
      <tag>DC</tag>
      
      <tag>Cesium</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终于都弄完了</title>
    <link href="/daily/2023/06/01/"/>
    <url>/daily/2023/06/01/</url>
    
    <content type="html"><![CDATA[<p>今天早上把fluid主题的相关文档基本都看完了，包括进阶脚本注入部分，然后顺手把rainbow也给接了进来。</p><p>下午接着看实时航线统计的事，使用polyline作为动态航线展示，然后通过轨迹路线模拟飞机航行过程，就是数量太多时有性能问题，明天需要再整理下。</p><p>晚上接着在window系统配置nvim，过程中装了scoop，然后还报几个错误，不过不影响使用，缓几天了再研究研究。</p><p>然后今天的结果是：家里电脑该弄的都弄好了，接下来就是撸起袖子开干的时候了。</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算了，就随意吧</title>
    <link href="/daily/2023/05/31/"/>
    <url>/daily/2023/05/31/</url>
    
    <content type="html"><![CDATA[<p>早上写了一个字符串替换脚本，是从 Excel 读取一个映射关系，然后对一个 zip 文件里的内容进行关键词替换。</p><p>下午又接着研究 Gis 实时航线统计实现方式，目前简单尝试了通过内置的 Polyline 组件模拟航线，但数量大的话会卡。</p><p>GeForce Experience 突然登录不上了，挂 VPN、修改 DNS，然并没啥用。</p><p>然后想在 Window 系统装下 Nvim，方便后面写博客用，但 packer 安装依赖失败，Powershell 对系统代理不生效。也是配了$env:HTTP_PROXY 啥的，然并卵用。</p><p>最后尝试 curl google.com时提示需要在 IE 浏览器做初始化配置，于是打开了 IE，然后就好了…</p><p>关键是 GeForce Ex 登录页也能出来了…</p>]]></content>
    
    
    <categories>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时光荏苒，当以笔代替消逝的记忆</title>
    <link href="/Hello/hello/"/>
    <url>/Hello/hello/</url>
    
    <content type="html"><![CDATA[<p>偶然回头，才发现背后已然是一片空白。</p><p>也曾有过几次想要写点东西，切切实实的记录下来，而不是靠那逐渐消亡的脑细胞，但最终都以各种理由中断，比如工作太忙、现在学到的东西过于浅薄，无法掏出正真有价值的知识、甚至天真的想靠自己天才般的头脑把所有的知识都真正占为己有。无论短期记忆、长期记忆，最终都经不住时间的摧残，最后留给你的，只有习惯和空白。</p><p>上大学的时候，在博客园坚持过好长一段时间，每天都写博客(<a href="https://www.cnblogs.com/realsoul/">我的博客</a>)，那时也是刚好刚开始接触编程的一些知识吧，兴致很高，而且也有足够的时间。从纸上谈兵到真正实战，真的是一大步，实习那会真的是一直忙着写Bug，也就不再写博客了。</p><p>这次决定开始从头积累，也有想过用博客园，或者掘金（CSDN、新浪什么的就不用考虑了，全是广告），不过就是颜值不过关，也想直接自己做个博客网站，但想想有归档、标签、搜索等，感觉功能还蛮复杂的，关键是没有设计自己做出来的东西总感觉会不满意，然后一直改，一直改，最后就疯了。还有就是之前见过Hexo fluid这个主题，真的是一见钟情，非常简洁。</p><p>这个博客从创建到配置到自己满意，大概花了半天的时间吧。Hexo真的很强大，不折腾的话，估计半个小时就搞好了吧。搁在以前，肯定是要自己搞一套主题，或者模仿Hexo搭个类似的框架，然后再半途而废，因为自己搞的主题是在是太丑了，而且自己的想法随时可能会变，改来改去就烦了。现在这种什么都想自己搞一套的想法转瞬即逝，以前是要自己代码敲得爽，现在是要程序用的爽。</p><p>发现自己真的变了很多，以前写这种Hello World的时候，一定要先定个小目标：比如每天写个10篇博客。现在觉得真的没必要强迫自己每天去写博客了，我只想把自己不想忘记的东西记录在这里。</p><p>6月，有个好的开始吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>开始</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
